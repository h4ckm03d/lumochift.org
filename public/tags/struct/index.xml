<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>struct on Moch. Lutfi Tech blog</title>
    <link>https://lumochift.org/tags/struct/</link>
    <description>Recent content in struct on Moch. Lutfi Tech blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 17 Dec 2017 17:39:49 +0700</lastBuildDate>
    
	<atom:link href="https://lumochift.org/tags/struct/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Struct</title>
      <link>https://lumochift.org/posts/struct/</link>
      <pubDate>Sun, 17 Dec 2017 17:39:49 +0700</pubDate>
      
      <guid>https://lumochift.org/posts/struct/</guid>
      <description>Dalam pemrograman berorientasi object tentunya kita pasti mengenal apa itu class, enkapsulasi, inheritance, polimorfisme, dan lain sebagainya. Apakah semuanya masih bisa kita pakai dalam golang? Tentu tidak, tapi sebelum membahas lebih lanjut tentang konsep OOP sebaiknya kita perlu mengetahui tipe data dasar untuk OOP di golang yaitu struct.
Struct tl;dr  tidak ada class, adanya struct tidak ada inheritance, tapi menggunakan komposisi tidak ada konstruktor, tapi menggunakan return [pointer] function public access modifier menggunakan nama fungsi/peubah huruf besar public access modifier menggunakan nama fungsi/peubah huruf kecil  Struct merupakan tipe data dasar yang digunakan untuk menggantikan fungsi dari class di bahasa pemrograman lain seperti C#, Java, C++, dll.</description>
    </item>
    
  </channel>
</rss>